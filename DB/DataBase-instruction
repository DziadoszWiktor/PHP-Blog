/*

# tabela dla postow na blogu
create table posts(
post_id serial primary key,
nickname varchar(30) not null,
title varchar(100) not null,
content text not null
);

# dane do tabeli postow
insert into posts (nickname,title,content) values 
('wik01','Title1','A CMS1 always has a management interface where you can log in, configure the system, and create and edit content. This should require a login e.g. OpenAuth or password over HTTPS. The CMS backend checks each request that would affect settings or content for proper authorization: the user must be logged in and must have the necessary rights, if the CMS includes a rights management system. That can be done securely, but it is easy to make fatal mistakes especially if you havent created a web application before. The most common problems are SQL injection vulnerabilities or bugs in the authorization check for each protected action. If the site allows content to be generated by untrusted users comments, a search bar, or a 404 page that displays the missing URL, then XSS attacks are also possible.'),
('nick02','Title2','A CMS2 always has a management interface where you can log in, configure the system, and create and edit content. This should require a login e.g. OpenAuth or password over HTTPS. The CMS backend checks each request that would affect settings or content for proper authorization: the user must be logged in and must have the necessary rights, if the CMS includes a rights management system. That can be done securely, but it is easy to make fatal mistakes especially if you havent created a web application before. The most common problems are SQL injection vulnerabilities or bugs in the authorization check for each protected action. If the site allows content to be generated by untrusted users comments, a search bar, or a 404 page that displays the missing URL, then XSS attacks are also possible.'),
('david03','Title3','A CMS3 always has a management interface where you can log in, configure the system, and create and edit content. This should require a login e.g. OpenAuth or password over HTTPS. The CMS backend checks each request that would affect settings or content for proper authorization: the user must be logged in and must have the necessary rights, if the CMS includes a rights management system. That can be done securely, but it is easy to make fatal mistakes especially if you havent created a web application before. The most common problems are SQL injection vulnerabilities or bugs in the authorization check for each protected action. If the site allows content to be generated by untrusted users comments, a search bar, or a 404 page that displays the missing URL, then XSS attacks are also possible.');

# tabela dla komentarzy
create table comments(
comment_id serial primary key,
nickname varchar(30) not null,
title varchar(100) not null,
content text not null
);

# dane dla tabeli z komentarzami
insert into comments (nickname,title,content) values
('mark','title1','good'),
('lisa','title1','interesting'),
('bob','title1','fine'),
('joel','title1','helpful'),
('lucy','title1','very nice');

# tabela laczaca dla relacji n do n tabel posty i komentarze
create table posts_comments(
post_id int8,
comment_id int8,
constraint ppc foreign key (post_id) references posts(post_id) on delete cascade,
constraint cpc foreign key (comment_id) references comments(comment_id) on delete restrict
);

# dane dla tabeli laczacej
insert into posts_comments values (1,1),(1,2),(2,3),(2,4),(3,5);

# zapytanie dla postow z danym id
select comments.comment_id,nickname,title,content,posts_comments.post_id
from comments left join posts_comments using (comment_id)
where posts_comments.post_id = 3;

# tabela admin dla przechowywania loginu
create table admin(
admin_id serial primary key,
username varchar(50) not null,
password varchar(50) not null);

# dane dla tabeli admin
insert into admin (username,password) values ('admin','214677');

# tabela dla kontaktow (do wpisania do bazy)
create table contacts (
contact_id serial primary key,
full_name varchar(50) not null,
email varchar(50) not null,
content text not null);

#dane do tabeli contacts (do wpisania do bazy)
insert into contacts (full_name,email,content) values ('Nick Fury','avengers@mail.com','This is a contact message');

*/
select * from contacts;





  